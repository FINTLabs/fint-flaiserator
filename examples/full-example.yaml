apiVersion: fintlabs.no/v1alpha1
kind: Application
metadata:
  name: flais-test-application
  namespace: rogfk-no
  labels:
    app.kubernetes.io/name: flais-test-application
    app.kubernetes.io/instance: flais-test-application_rogfk_no
    app.kubernetes.io/version: latest
    app.kubernetes.io/component: test-application
    app.kubernetes.io/part-of: flais
    fintlabs.no/team: flais
spec:
  port: 80
  org-id: rogfk.no
  image: docker/getting-started
  prometheus:
    enabled: true
    port: "80"
    path: /prometheus
  env:
    - name: ENV1
      value: test
    - name: ENV2
      value: test
    - name: ENV3
      value: test
  envFrom:
    - secretRef:
        name: flais-test-application-secret
  onePassword:
    itemPath: "vaults/aks-alpha-vault/items/azurerator"
  persistence:
    storage:
      container-blob: true
      file-share: true
    database:
      name: fint_flyt_integration_service
  auth:
    application:
      enabled: true
      allowedUsers:
        - ola@norman.no
    service:
      enabled: true
  fint:
    adapter:
      shortDescription: Test adapter
      components:
        - administrasjon_kodeverk
        - administrasjon_personal
    client:
      shortDescription: Test client
      components:
        - administrasjon_kodeverk
        - administrasjon_personal
  url:
    hostname: test.flais.io
    basePath: /alpha/fintlabs-no
  ingress:
    enabled: true
    #match: Host(`alpha.felleskomponent.no`) && PathPrefix(`/`)
  kafka:
    acls:
      - topic: '*.test.topic'
        permission: read
  resources:
    limits:
      memory: "1024Mi"
      cpu: "1"
    requests:
      memory: "128Mi"
      cpu: "100m"
  restartPolicy: Always
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate: { maxSurge: 1, maxUnavailable: 0 }